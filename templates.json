[
  {
    "type": "container",
    "title": "DugongCMD",
    "description": "Desktop-as-a-Service for Bioinformatics. Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:cmd",
    "privileged": true,
    "ports": [
      "3000/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/headless/data"]
  },
  {
    "type": "container",
    "title": "DugongGUI - XFCE flavour",
    "description": "Desktop-as-a-Service for Bioinformatics. \n Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:xfce",
    "privileged": true,
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/headless/data"]
  },
  {
    "type": "container",
    "title": "DugongGUI - iceWM flavour",
    "description": "Desktop-as-a-Service for Bioinformatics. \n Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:icewm",
    "privileged": true,
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/headless/data"]
  },
  {
    "type": "container",
    "title": "DugongClean - CMD flavour",
    "description": "Desktop-as-a-Service for Bioinformatics. \n Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/dugong:cmd",
    "privileged": true,
    "ports": [
      "3000/tcp", "22/tcp"
    ],
    "volumes": ["/headless/data"]
  },
  {
    "type": "container",
    "title": "DugongClean - GUI XFCE flavour",
    "description": "Desktop-as-a-Service for Bioinformatics. \n Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/clean:xfce4",
    "privileged": true,
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp"
    ],
    "volumes": ["/headless/data"]
  },
  {
    "type": "container",
    "title": "DugongClean - GUI iceWM flavour",
    "description": "Desktop-as-a-Service for Bioinformatics. \n Includes: Jupyter Notebook, BioConda, LinuxBrew, among other features.",
    "categories": ["Dugong Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/clean:icewm",
    "privileged": true,
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp"
    ],
    "volumes": ["/headless/data"]
  },
  {
    "type": "container",
    "title": "Dugong Pipeline: CirComPara",
    "description": "Complete CirComPara Pipeline in DugongGUI XFCE.",
    "categories": ["Dugong Pipeline", "Jupyter Pipeline"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/circompara:xfce",
    "privileged": true,
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Dugong Pipeline: CirComPara",
    "description": "Complete CirComPara Pipeline in DugongGUI iceWM.",
    "categories": ["Dugong Pipeline", "Jupyter Pipeline"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/circompara:icewm",
    "privileged": true,
    "ports": [
      "6901/tcp", "5901/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Dugong Pipeline: CirComPara",
    "description": "Complete CirComPara Pipeline in DugongCMD.",
    "categories": ["Dugong Pipeline", "Jupyter Pipeline"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_dugong.png",
    "image": "dugong/circompara:cmd",
    "privileged": true,
    "ports": [
      "3000/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Stable",
    "description": "Galaxy Docker Image Stable.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-stable",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: UseGalaxy.org",
    "description": "Galaxy Docker repository with tools from usegalaxy.org (UseGalaxy.org flavour).",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/usegalaxy",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Workflow4Metabolomics",
    "description": "Galaxy Docker Image Workflow4Metabolomics flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "workflow4metabolomics/galaxy-workflow4metabolomics",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: RNA workbench",
    "description": "Galaxy Docker Image RNA workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-rna-workbench",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: NCBI-Blast",
    "description": "Galaxy Docker Image NCBI-Blast flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-blast",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Ballaxy",
    "description": "Galaxy Docker Image Ballaxy flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "anhi/ballaxy",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: DeepTools",
    "description": "Galaxy Docker Image DeepTools flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-deeptools",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: ChIP-exo Workbench",
    "description": "Galaxy Docker Image ChIP-exo Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "gregvonkuster/docker-galaxy-chip-exo",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Proteomics",
    "description": "Galaxy Docker Image Proteomics Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxyp",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: NGS Preprocessing",
    "description": "Galaxy Docker Image NGS Preprocessing flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-ngs-preprocessing",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: MPI for Evolutionary Biology",
    "description": "Galaxy Docker Image MPI for Evolutionary Biology flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-ploen",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Cheminformatics workbench",
    "description": "Galaxy Docker Image Cheminformatics workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-chemicaltoolbox",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Epigenetics workbench",
    "description": "Galaxy Docker Image Epigenetics workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-epigenetics",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Machine Learning",
    "description": "Galaxy Docker Image Machine Learning flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-machine-learning",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Molecular Phylogenetics",
    "description": "Galaxy Docker Image Molecular Phylogenetics flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-phylogenetics",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Protease Predictions",
    "description": "Galaxy Docker Image Protease Predictions flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-protease-prediction",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Metagenomics Workbench",
    "description": "Galaxy Docker Image Metagenomics Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-metagenomics",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: DESeq2 Workbench",
    "description": "Galaxy Docker Image DESeq2 Workbench flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-deseq2",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Sequence Tools",
    "description": "Galaxy Docker Image Sequence Tools flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-sequence-tools",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Exome Seq",
    "description": "Galaxy Docker Image Exome Seq flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-exome-seq",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: RNA Structural Analysis",
    "description": "Galaxy Docker Image RNA Structural Analysis flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-rna-structural-analysis",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Genome Annotation",
    "description": "Galaxy Docker Image Genome Annotation flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-genome-annotation",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: Image Analysis",
    "description": "Galaxy Docker Image Imaging Analysis flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-imaging",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: MUMmer 3",
    "description": "Galaxy Docker Image MUMmer 3 flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-mummer",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy: RNA-Seq",
    "description": "Galaxy Docker Image RNA-Seq flavour.",
    "categories": ["Galaxy Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/galaxy-rna-seq",
    "env": [
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "GALAXY_LOGGING",
        "label": "Galaxy Logging"},
      {
        "name": "ENABLE_TTS_INSTALL",
        "label": "Enables TTS Install"
      },
      {
        "name": "BARE",
        "label": "Bare"
      },
      {
        "name": "NONUSE",
        "label": "Non Use"
      },
      {
        "name": "UWSGI_PROCESSES",
        "label": "UWSGI Processes"
      },
      {
        "name": "UWSGI_THREADS",
        "label": "UWSGI Threads"
      },
      {
        "name": "GALAXY_DOCKER_ENABLED",
        "label": "Docker Enabled"
      },
      {
        "name": "GALAXY_DOCKER_VOLUMES",
        "label": "Docker Volumes"
      },
      {
        "name": "GALAXY_HANDLER_NUMPROCS",
        "label": "Handler NumProcs"
      },
      {
        "name": "LOAD_GALAXY_CONDITIONAL_DEPENDENCIES",
        "label": "Conditional Dependencies"
      },
      {
        "name": "LOAD_PYTHON_DEV_DEPENDENCIES",
        "label": "Python Dev Dependencies"
      },
      {
        "name": "USE_HTTPS",
        "label": "Use HTTPS"
      },
      {
        "name": "USE_HTTPS_LETSENCRYPT",
        "label": "Use HTTPS LetsEncrypt"
      },
      {
        "name": "GALAXY_CONFIG_GALAXY_INFRASTRUCTURE_URL",
        "label": "Galaxy Infrastructure URL"
      }
    ],
    "ports": [
      "80/tcp", "21/tcp", "22/tcp", "8800/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "Galaxy Tools: IPython Notebook",
    "description": "Docker IPython Container",
    "categories": ["Galaxy Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/docker-ipython-notebook",
    "ports": [
      "6789/tcp"
    ],
    "volumes": ["/import/"]
  },
  {
    "type": "container",
    "title": "Galaxy Tools: Jupyter Notebook",
    "description": "Docker Jupyter Container",
    "categories": ["Galaxy Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/docker-jupyter-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/import/"]
  },
  {
    "type": "container",
    "title": "Galaxy Tools: Planemo",
    "description": "Docker Planemo Container",
    "categories": ["Galaxy Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_galaxy.png",
    "image": "bgruening/planemo",
    "ports": [
      "7777/tcp"
    ],
    "volumes": ["/galaxy-central/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: Base",
    "description": "Small base image for Jupyter Notebook.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/base-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: JupyterHub",
    "description": "JupyterHub: A multi-user server for Jupyter notebooks.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyterhub/jupyterhub",
    "ports": [
      "8000/tcp"
    ],
    "volumes": ["/srv/jupyterhub/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: SingleUser",
    "description": "JupyterHub: A single-user server for Jupyter notebooks.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyterhub/singleuser",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: Minimal",
    "description": "Minimal Jupyter Notebook.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/minimal-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: Scientific Python",
    "description": "Jupyter Notebook Scientific Python Stack.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/scipy-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: All Spark",
    "description": "Jupyter Notebook Python, Scala, R, Spark, Mesos Stack.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/all-spark-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: Data Science",
    "description": "Jupyter Notebook Data Science.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/datascience-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: Tensorflow",
    "description": "Jupyter Notebook Scientific Python Stack Tensorflow.",
    "categories": ["Jupyter Notebook"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/tensorflow-notebook",
    "ports": [
      "8888/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "Jupyter Notebook: Viewer",
    "description": "Jupyter Notebook Viewer.",
    "categories": ["Jupyter Tools"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_jupyter.png",
    "image": "jupyter/nbviewer",
    "ports": [
      "8080/tcp"
    ],
    "volumes": ["/home/jovyan/work/"]
  },
  {
    "type": "container",
    "title": "GUIdock",
    "description": "Delivering GUI Display from Docker.",
    "categories": ["GUIdock Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_guidock.png",
    "image": "biodepot/guidock",
    "ports": [
      "3000/tcp", "22/tcp", "8888/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "GUIdock: noVNC",
    "description": "Delivering GUI Display from Docker.",
    "categories": ["GUIdock Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_guidock.png",
    "image": "biodepot/guidock_novnc",
    "ports": [
      "6080/tcp"
    ],
    "volumes": ["/export/"]
  },
  {
    "type": "container",
    "title": "R: Base",
    "description": "R is a system for statistical computation and graphics.",
    "categories": ["R Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_R.png",
    "image": "docker pull r-base"
  },
  {
    "type": "container",
    "title": "R: RStudio",
    "description": "RStudio Server image.",
    "categories": ["R Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_R.png",
    "image": "rocker/rstudio",
    "ports": [
      "8787/tcp", "3838/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "R: Shiny",
    "description": "Shiny Server image.",
    "categories": ["R Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_R.png",
    "image": "rocker/rstudio",
    "ports": [
      "3838/tcp"
    ],
    "volumes": ["/srv/shiny-server/", "/var/log/shiny-server/"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Base",
    "description": "Bioconductor: Base image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_base2",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Core",
    "description": "Bioconductor: Core image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_core2",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Flow Cytometry",
    "description": "Bioconductor: Flow Cytometry image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_flow",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Microarray Packages",
    "description": "Bioconductor: Microarray Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_microarray",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Sequencing Packages",
    "description": "Bioconductor: Sequencing Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_sequencing",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Proteomics Packages",
    "description": "Bioconductor: Proteomics Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_proteomics2",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },
  {
    "type": "container",
    "title": "Bioconductor: Metabolomics Packages",
    "description": "Bioconductor: Metabolomics Packages image.",
    "categories": ["Bioconductor Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_bioconductor.png",
    "image": "bioconductor/release_metabolomics2",
    "ports": [
      "8787/tcp"
    ],
    "volumes": ["/home/rstudio"]
  },	
  {
    "type": "container",
    "title": "BioContainer: Base",
    "description": "An open-source and community-driven framework for software standardization.",
    "categories": ["BioContainer Flavours"],
    "platform": "linux",
    "logo": "https://raw.githubusercontent.com/LaBiOS/bioportainer/master/images/logo_biocontainer.png",
    "image": "biocontainers/biocontainers",
    "volumes": ["/data", "/config"]
  },
  {
    "type": "container",
    "title": "Registry",
    "description": "Docker image registry",
    "categories": ["docker"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/registry.png",
    "image": "registry:latest",
    "ports": [
      "5000/tcp"
    ],
    "volumes": ["/var/lib/registry"]
  },
  {
    "type": "container",
    "title": "Nginx",
    "description": "High performance web server",
    "categories": ["webserver"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/nginx.png",
    "image": "nginx:latest",
    "ports": [
      "80/tcp",
      "443/tcp"
    ],
    "volumes": ["/etc/nginx", "/usr/share/nginx/html"]
  },
  {
    "type": "container",
    "title": "Httpd",
    "description": "Open-source HTTP server",
    "categories": ["webserver"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/httpd.png",
    "image": "httpd:latest",
    "ports": [
      "80/tcp"
    ],
    "volumes": ["/usr/local/apache2/htdocs/"]
  },
  {
    "type": "container",
    "title": "Caddy",
    "description": "HTTP/2 web server with automatic HTTPS",
    "categories": ["webserver"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/caddy.png",
    "image": "abiosoft/caddy:latest",
    "ports": [
      "80/tcp", "443/tcp", "2015/tcp"
    ],
    "volumes": ["/root/.caddy"]
  },
  {
    "type": "container",
    "title": "MySQL",
    "description": "The most popular open-source database",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/mysql.png",
    "image": "mysql:latest",
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "Root password"
      }
    ],
    "ports": [
      "3306/tcp"
    ],
    "volumes": ["/var/lib/mysql"]
  },
  {
    "type": "container",
    "title": "MariaDB",
    "description": "Performance beyond MySQL",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/mariadb.png",
    "image": "mariadb:latest",
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "Root password"
      }
    ],
    "ports": [
      "3306/tcp"
    ],
    "volumes": ["/var/lib/mysql"]
  },
  {
    "type": "container",
    "title": "PostgreSQL",
    "description": "The most advanced open-source database",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/postgres.png",
    "image": "postgres:latest",
    "env": [
      {
        "name": "POSTGRES_USER",
        "label": "Superuser"
      },
      {
        "name": "POSTGRES_PASSWORD",
        "label": "Superuser password"
      }
    ],
    "ports": [
      "5432/tcp"
    ],
    "volumes": ["/var/lib/postgresql/data"]
  },
  {
    "type": "container",
    "title": "Mongo",
    "description": "Open-source document-oriented database",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/mongo.png",
    "image": "mongo:latest",
    "ports": [
      "27017/tcp"
    ],
    "volumes": ["/data/db"]
  },
  {
    "type": "container",
    "title": "CockroachDB",
    "description": "An open-source, survivable, strongly consistent, scale-out SQL database",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/cockroachdb.png",
    "image": "cockroachdb/cockroach:latest",
    "ports": [
      "26257/tcp",
      "8080/tcp"
    ],
    "volumes": ["/cockroach/cockroach-data"],
    "command": "start --insecure"
  },
  {
    "type": "container",
    "title": "CrateDB",
    "description": "An open-source distributed SQL database",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/cratedb.png",
    "image": "crate:latest",
    "ports": [
      "4200/tcp",
      "4300/tcp"
    ],
    "volumes": ["/data"]
  },
  {
    "type": "container",
    "title": "Elasticsearch",
    "description": "Open-source search and analytics engine",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/elasticsearch.png",
    "image": "elasticsearch:latest",
    "ports": [
      "9200/tcp",
      "9300/tcp"
    ],
    "volumes": ["/usr/share/elasticsearch/data"]
  },
  {
    "type": "container",
    "title": "Gitlab CE",
    "description": "Open-source end-to-end software development platform",
    "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
    "categories": ["development", "project-management"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/gitlab_ce.png",
    "image": "gitlab/gitlab-ce:latest",
    "ports": [
      "80/tcp",
      "443/tcp",
      "22/tcp"
    ],
    "volumes": [
      { "container": "/etc/gitlab" },
      { "container": "/var/log/gitlab" },
      { "container": "/var/opt/gitlab" }
    ]
  },
  {
    "type": "container",
    "title": "Minio",
    "description": "A distributed object storage server built for cloud applications and devops",
    "categories": ["storage"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/minio.png",
    "image": "minio/minio:latest",
    "ports": [
      "9000/tcp"
    ],
    "env": [
      {
        "name": "MINIO_ACCESS_KEY",
        "label": "Minio access key"
      },
      {
        "name": "MINIO_SECRET_KEY",
        "label": "Minio secret key"
      }
    ],
    "volumes": ["/export", "/root/.minio"],
    "command": "server /export"
  },
  {
    "type": "container",
    "title": "Scality S3",
    "description": "Standalone AWS S3 protocol server",
    "categories": ["storage"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/scality-s3.png",
    "image": "scality/s3server",
    "ports": [
      "8000/tcp"
    ],
    "env": [
      {
        "name": "SCALITY_ACCESS_KEY",
        "label": "Scality S3 access key"
      },
      {
        "name": "SCALITY_SECRET_KEY",
        "label": "Scality S3 secret key"
      }
    ],
    "volumes": ["/usr/src/app/localData", "/usr/src/app/localMetadata"]
  },
  {
    "type": "container",
    "title": "SQL Server",
    "description": "Microsoft SQL Server on Linux",
    "categories": ["database"],
    "platform": "linux",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "logo": "https://cloudinovasi.id/assets/img/logos/microsoft.png",
    "image": "microsoft/mssql-server-linux:2017-GA",
    "ports": [
      "1433/tcp"
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      },
      {
        "name": "SA_PASSWORD",
        "label": "SA password"
      }
    ]
  },
  {
    "type": "container",
    "title": "SQL Server",
    "description": "Microsoft SQL Server Developer for Windows containers",
    "categories": ["database"],
    "platform": "windows",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "logo": "https://cloudinovasi.id/assets/img/logos/microsoft.png",
    "image": "microsoft/mssql-server-windows-developer:latest",
    "ports": [
      "1433/tcp"
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      },
      {
        "name": "sa_password",
        "label": "SA password"
      }
    ],
    "volumes": ["C:/temp/"]
  },
  {
    "type": "container",
    "title": "SQL Server Express",
    "description": "Microsoft SQL Server Express for Windows containers",
    "categories": ["database"],
    "platform": "windows",
    "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
    "logo": "https://cloudinovasi.id/assets/img/logos/microsoft.png",
    "image": "microsoft/mssql-server-windows-express:latest",
    "ports": [
      "1433/tcp"
    ],
    "env": [
      {
        "name": "ACCEPT_EULA",
        "set": "Y"
      },
      {
        "name": "sa_password",
        "label": "SA password"
      }
    ],
    "volumes": ["C:/temp/"]
  },
  {
    "type": "container",
    "title": "IronFunctions API",
    "description": "Open-source serverless computing platform",
    "categories": ["serverless"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/ironfunctions.png",
    "image": "iron/functions:latest",
    "ports": [
      "8080/tcp"
    ],
    "volumes": ["/app/data"],
    "privileged": true
  },
  {
    "type": "container",
    "title": "IronFunctions UI",
    "description": "Open-source user interface for IronFunctions",
    "categories": ["serverless"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/ironfunctions.png",
    "image": "iron/functions-ui:latest",
    "ports": [
      "4000/tcp"
    ],
    "volumes": ["/app/data"],
    "env": [
      {
        "name": "API_URL",
        "label": "API URL"
      }
    ],
    "privileged": true
  },
  {
    "type": "container",
    "title": "Solr",
    "description": "Open-source enterprise search platform",
    "categories": ["search-engine"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/solr.png",
    "image": "solr:latest",
    "ports": [
      "8983/tcp"
    ],
    "volumes": ["/opt/solr/mydata"]
  },
  {
    "type": "container",
    "title": "Redis",
    "description": "Open-source in-memory data structure store",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/redis.png",
    "image": "redis:latest",
    "ports": [
      "6379/tcp"
    ],
    "volumes": ["/data"]
  },
  {
    "type": "container",
    "title": "RabbitMQ",
    "description": "Highly reliable enterprise messaging system",
    "categories": ["messaging"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/rabbitmq.png",
    "image": "rabbitmq:latest",
    "ports": [
      "5671/tcp",
      "5672/tcp"
    ],
    "volumes": ["/var/lib/rabbitmq"]
  },
  {
    "type": "container",
    "title": "Ghost",
    "description": "Free and open-source blogging platform",
    "categories": ["blog"],
    "note": "Access the blog management interface under <code>/ghost/</code>.",
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/ghost.png",
    "image": "ghost:latest",
    "ports": [
      "2368/tcp"
    ],
    "volumes": ["/var/lib/ghost/content"]
  },
  {
    "type": "container",
    "title": "WordPress",
    "description": "A free and open-source CMS",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/wordpress.png",
    "image": "wordpress:latest",
    "env": [
      {
        "name": "WORDPRESS_DB_HOST",
        "label": "MySQL database host",
        "type": "container"
      },
      {
        "name": "WORDPRESS_DB_PASSWORD",
        "label": "Database password"
      }
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": ["/var/www/html"]
  },
  {
    "type": "container",
    "title": "Joomla",
    "description": "Another free and open-source CMS",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/joomla.png",
    "image": "joomla:latest",
    "env": [
      {
        "name": "JOOMLA_DB_HOST",
        "label": "MySQL database host",
        "type": "container"
      },
      {
        "name": "JOOMLA_DB_PASSWORD",
        "label": "Database password"
      }
    ],
    "ports": [
      "80/tcp"
    ],
    "volumes": ["/var/www/html"]
  },
  {
    "type": "container",
    "title": "Drupal",
    "description": "Open-source content management framework",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/drupal.png",
    "image": "drupal:latest",
    "ports": [
      "80/tcp"
    ],
    "volumes": ["/var/www/html"]
  },
  {
    "type": "container",
    "title": "Plone",
    "description": "A free and open-source CMS built on top of Zope",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/plone.png",
    "image": "plone:latest",
    "ports": [
      "8080/tcp"
    ],
    "volumes": ["/data"]
  },
  {
    "type": "container",
    "title": "Magento 2",
    "description": "Open-source e-commerce platform",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/magento.png",
    "image": "alankent/gsd:latest",
    "ports": [
      "80/tcp",
      "3000/tcp",
      "3001/tcp"
    ],
    "volumes": ["/var/www/html/"]
  },
  {
    "type": "container",
    "title": "Sematext Docker Agent",
    "description": "Collect logs, metrics and docker events",
    "categories": ["Log Management", "Monitoring"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/sematext.png",
    "image": "sematext/sematext-agent-docker:latest",
    "name": "sematext-agent",
    "privileged": true,
    "env": [
      {
        "name": "LOGSENE_TOKEN",
        "label": "Logs token"
      },
      {
        "name": "SPM_TOKEN",
        "label": "SPM monitoring token"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  },
  {
    "type": "container",
    "title": "Jenkins",
    "description": "Open-source continuous integration tool",
    "categories": ["continuous-integration"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/jenkins.png",
    "image": "jenkins/jenkins:lts",
    "ports": [
      "8080/tcp",
      "50000/tcp"
    ],
    "env": [
      {
        "name": "JENKINS_OPTS",
        "label": "Jenkins options"
      }
    ],
    "volumes": ["/var/jenkins_home"]
  },
  {
    "type": "container",
    "title": "Redmine",
    "description": "Open-source project management tool",
    "categories": ["project-management"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/redmine.png",
    "image": "redmine:latest",
    "ports": [
      "3000/tcp"
    ],
    "volumes": ["/usr/src/redmine/files"]
  },
  {
    "type": "container",
    "title": "Urbackup",
    "description": "Open-source network backup",
    "categories": ["backup"],
    "platform": "linux",
    "note": "This application web interface is exposed on the port 55414 inside the container.",
    "logo": "https://cloudinovasi.id/assets/img/logos/urbackup.png",
    "image": "cfstras/urbackup",
    "ports": [
      "55413/tcp", "55414/tcp", "55415/tcp", "35622/tcp"
    ],
    "volumes": ["/var/urbackup"]
  },
  {
    "type": "container",
    "title": "CommandBox",
    "description": "ColdFusion (CFML) CLI",
    "categories": ["development"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/ortussolutions-commandbox.png",
    "image": "ortussolutions/commandbox:latest",
    "env": [
      {
        "name": "CFENGINE",
        "set": "lucee@4.5"
      }
    ],
    "ports": [
      "8080/tcp", "8443/tcp"
    ]
  },
  {
    "type": "container",
    "title": "ContentBox",
    "description": "Open-source modular CMS",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/ortussolutions-contentbox.png",
    "image": "ortussolutions/contentbox:latest",
    "env": [
      {
        "name": "express",
        "set": "true"
      },
      {
        "name": "install",
        "set": "true"
      },
      {
        "name": "CFENGINE",
        "set": "lucee@4.5"
      }
    ],
    "ports": [
      "8080/tcp", "8443/tcp"
    ],
    "volumes": ["/data/contentbox/db", "/app/includes/shared/media"]
  },
  {
    "type": "stack",
    "title": "OpenFaaS",
    "name": "func",
    "description": "Serverless functions made simple",
    "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
    "categories": ["serverless"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/openfaas.png",
    "repository": {
      "url": "https://github.com/openfaas/faas",
      "stackfile": "docker-compose.yml"
    }
  },
  {
    "type": "stack",
    "title": "IronFunctions",
    "description": "Open-source serverless computing platform",
    "note": "Deploys the IronFunctions API and UI.",
    "categories": ["serverless"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/ironfunctions.png",
    "repository": {
      "url": "https://github.com/deviantony/ironfunctions_stack",
      "stackfile": "docker-stack.yml"
    }
  },
  {
    "type": "stack",
    "title": "CockroachDB",
    "description": "CockroachDB cluster",
    "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
    "categories": ["database"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/cockroachdb.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/cockroachdb/docker-stack.yml"
    }
  },
  {
    "type": "stack",
    "title": "Wordpress",
    "description": "Wordpress setup with a MySQL database",
    "note": "Deploys a Wordpress instance connected to a MySQL database.",
    "categories": ["CMS"],
    "platform": "linux",
    "logo": "https://cloudinovasi.id/assets/img/logos/wordpress.png",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/wordpress/docker-stack.yml"
    },
    "env": [
      {
        "name": "MYSQL_ROOT_PASSWORD",
        "label": "Database root password",
        "description": "Password used by the MySQL root user."
      }
    ]
  },
  {
    "title": "Sematext Docker Agent",
    "type": "stack",
    "categories": ["Log Management", "Monitoring"],
    "description": "Collect logs, metrics and docker events",
    "logo": "https://cloudinovasi.id/assets/img/logos/sematext.png",
    "platform": "linux",
    "repository": {
      "url": "https://github.com/portainer/templates",
      "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
    },
    "env": [
      {
        "name": "LOGSENE_TOKEN",
        "label": "Logs token"
      },
      {
        "name": "SPM_TOKEN",
        "label": "SPM monitoring token"
      }
    ],
    "volumes": [
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }
    ]
  }
]
